/* ddsStub.h
   Generated by gSOAP 2.7.9 from DigiDocService.h
   Copyright(C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef ddsStub_H
#define ddsStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/

typedef unsigned char bool;
#define false 0
#define true !false

#ifndef SOAP_TYPE_xsd__hexBinary
#define SOAP_TYPE_xsd__hexBinary (20)
/* hexBinary schema type: */
struct xsd__hexBinary
{
	unsigned char *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_d__DataFileAttribute
#define SOAP_TYPE_d__DataFileAttribute (23)
/* d:DataFileAttribute */
struct d__DataFileAttribute
{
	char *Name;	/* optional element of type xsd:string */
	char *Value;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__DataFileInfo
#define SOAP_TYPE_d__DataFileInfo (24)
/* d:DataFileInfo */
struct d__DataFileInfo
{
	char *Id;	/* optional element of type xsd:string */
	char *Filename;	/* optional element of type xsd:string */
	char *MimeType;	/* optional element of type xsd:string */
	char *ContentType;	/* optional element of type xsd:string */
	long Size;	/* required element of type xsd:int */
	char *DigestType;	/* optional element of type xsd:string */
	char *DigestValue;	/* optional element of type xsd:string */
	int __sizeOfAttributes;	/* sequence of elements <Attributes> */
	struct d__DataFileAttribute *__ptrAttributes;
};
#endif

#ifndef SOAP_TYPE_d__SignerRole
#define SOAP_TYPE_d__SignerRole (26)
/* d:SignerRole */
struct d__SignerRole
{
	long Certified;	/* required element of type xsd:int */
	char *Role;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__SignatureProductionPlace
#define SOAP_TYPE_d__SignatureProductionPlace (27)
/* d:SignatureProductionPlace */
struct d__SignatureProductionPlace
{
	char *City;	/* optional element of type xsd:string */
	char *StateOrProvince;	/* optional element of type xsd:string */
	char *PostalCode;	/* optional element of type xsd:string */
	char *CountryName;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__CertificatePolicy
#define SOAP_TYPE_d__CertificatePolicy (28)
/* d:CertificatePolicy */
struct d__CertificatePolicy
{
	char *OID;	/* optional element of type xsd:string */
	char *URL;	/* optional element of type xsd:string */
	char *Description;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__CertificateInfo
#define SOAP_TYPE_d__CertificateInfo (29)
/* d:CertificateInfo */
struct d__CertificateInfo
{
	char *Issuer;	/* optional element of type xsd:string */
	char *Subject;	/* optional element of type xsd:string */
	char *ValidFrom;	/* optional element of type xsd:dateTime */
	char *ValidTo;	/* optional element of type xsd:dateTime */
	char *IssuerSerial;	/* optional element of type xsd:string */
	int __sizePolicies;	/* sequence of elements <Policies> */
	struct d__CertificatePolicy *__ptrPolicies;
};
#endif

#ifndef SOAP_TYPE_d__SignerInfo
#define SOAP_TYPE_d__SignerInfo (31)
/* d:SignerInfo */
struct d__SignerInfo
{
	char *CommonName;	/* optional element of type xsd:string */
	char *IDCode;	/* optional element of type xsd:string */
	struct d__CertificateInfo *Certificate;	/* optional element of type d:CertificateInfo */
};
#endif

#ifndef SOAP_TYPE_d__ConfirmationInfo
#define SOAP_TYPE_d__ConfirmationInfo (33)
/* d:ConfirmationInfo */
struct d__ConfirmationInfo
{
	char *ResponderID;	/* optional element of type xsd:string */
	char *ProducedAt;	/* optional element of type xsd:string */
	struct d__CertificateInfo *ResponderCertificate;	/* optional element of type d:CertificateInfo */
};
#endif

#ifndef SOAP_TYPE_d__TstInfo
#define SOAP_TYPE_d__TstInfo (34)
/* d:TstInfo */
struct d__TstInfo
{
	char *Id;	/* optional element of type xsd:string */
	char *Type;	/* optional element of type xsd:string */
	char *SerialNumber;	/* optional element of type xsd:string */
	char *CreationTime;	/* optional element of type xsd:dateTime */
	char *Policy;	/* optional element of type xsd:string */
	char *ErrorBound;	/* optional element of type xsd:string */
	bool Ordered;	/* required element of type xsd:boolean */
	char *TSA;	/* optional element of type xsd:string */
	struct d__CertificateInfo *Certificate;	/* optional element of type d:CertificateInfo */
};
#endif

#ifndef SOAP_TYPE_d__RevokedInfo
#define SOAP_TYPE_d__RevokedInfo (35)
/* d:RevokedInfo */
struct d__RevokedInfo
{
	ULONG64 Sequence;	/* required element of type xsd:positiveInteger */
	char *SerialNumber;	/* optional element of type xsd:string */
	char *RevocationDate;	/* optional element of type xsd:dateTime */
};
#endif

#ifndef SOAP_TYPE_d__CRLInfo
#define SOAP_TYPE_d__CRLInfo (36)
/* d:CRLInfo */
struct d__CRLInfo
{
	char *Issuer;	/* optional element of type xsd:string */
	char *LastUpdate;	/* optional element of type xsd:dateTime */
	char *NextUpdate;	/* optional element of type xsd:dateTime */
	int __sizeOfRevocations;	/* sequence of elements <Revocations> */
	struct d__RevokedInfo *__ptrRevocations;
};
#endif

#ifndef SOAP_TYPE_d__Error
#define SOAP_TYPE_d__Error (38)
/* d:Error */
struct d__Error
{
	long Code;	/* required element of type xsd:int */
	char *Category;	/* optional element of type xsd:string */
	char *Description;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__SignatureInfo
#define SOAP_TYPE_d__SignatureInfo (39)
/* d:SignatureInfo */
struct d__SignatureInfo
{
	char *Id;	/* optional element of type xsd:string */
	char *Status;	/* optional element of type xsd:string */
	struct d__Error *Error;	/* optional element of type d:Error */
	char *SigningTime;	/* optional element of type xsd:dateTime */
	int __sizeRoles;	/* sequence of elements <SignerRole> */
	struct d__SignerRole *__ptrSignerRole;
	struct d__SignatureProductionPlace *SignatureProductionPlace;	/* optional element of type d:SignatureProductionPlace */
	struct d__SignerInfo *Signer;	/* optional element of type d:SignerInfo */
	struct d__ConfirmationInfo *Confirmation;	/* optional element of type d:ConfirmationInfo */
	int __sizeTimestamps;	/* sequence of elements <Timestamps> */
	struct d__TstInfo *__ptrTimestamps;
	struct d__CRLInfo *CRLInfo;	/* optional element of type d:CRLInfo */
};
#endif

#ifndef SOAP_TYPE_d__SignedDocInfo
#define SOAP_TYPE_d__SignedDocInfo (47)
/* d:SignedDocInfo */
struct d__SignedDocInfo
{
	char *Format;	/* optional element of type xsd:string */
	char *Version;	/* optional element of type xsd:string */
	int __sizeOfDataFileInfos;	/* sequence of elements <DataFileInfo> */
	struct d__DataFileInfo *__ptrDataFileInfo;
	int __sizeOfSignatureInfos;	/* sequence of elements <SignatureInfo> */
	struct d__SignatureInfo *__ptrSignatureInfo;
};
#endif

#ifndef SOAP_TYPE_d__DataFileData
#define SOAP_TYPE_d__DataFileData (50)
/* d:DataFileData */
struct d__DataFileData
{
	char *Id;	/* optional element of type xsd:string */
	char *Filename;	/* optional element of type xsd:string */
	char *MimeType;	/* optional element of type xsd:string */
	char *ContentType;	/* optional element of type xsd:string */
	char *DigestType;	/* optional element of type xsd:string */
	char *DigestValue;	/* optional element of type xsd:string */
	long Size;	/* required element of type xsd:int */
	int __sizeOfAttributes;	/* sequence of elements <Attributes> */
	struct d__DataFileAttribute *__ptrAttributes;
	char *DfData;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__StartSessionResponse
#define SOAP_TYPE_d__StartSessionResponse (51)
/* d:StartSessionResponse */
struct d__StartSessionResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	long Sesscode;	/* required element of type xsd:int */
	struct d__SignedDocInfo *SignedDocInfo;	/* optional element of type d:SignedDocInfo */
};
#endif

#ifndef SOAP_TYPE_d__StartSession
#define SOAP_TYPE_d__StartSession (56)
/* d:StartSession */
struct d__StartSession
{
	char *SigningProfile;	/* optional element of type xsd:string */
	char *SigDocXML;	/* optional element of type xsd:string */
	bool bHoldSession;	/* required element of type xsd:boolean */
	struct d__DataFileData *datafile;	/* optional element of type d:DataFileData */
};
#endif

#ifndef SOAP_TYPE_d__CloseSessionResponse
#define SOAP_TYPE_d__CloseSessionResponse (57)
/* d:CloseSessionResponse */
struct d__CloseSessionResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__CloseSession
#define SOAP_TYPE_d__CloseSession (60)
/* d:CloseSession */
struct d__CloseSession
{
	long Sesscode;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_d__CreateSignedDocResponse
#define SOAP_TYPE_d__CreateSignedDocResponse (61)
/* d:CreateSignedDocResponse */
struct d__CreateSignedDocResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	struct d__SignedDocInfo *SignedDocInfo;	/* optional element of type d:SignedDocInfo */
};
#endif

#ifndef SOAP_TYPE_d__CreateSignedDoc
#define SOAP_TYPE_d__CreateSignedDoc (64)
/* d:CreateSignedDoc */
struct d__CreateSignedDoc
{
	long Sesscode;	/* required element of type xsd:int */
	char *Format;	/* optional element of type xsd:string */
	char *Version;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__AddDataFileResponse
#define SOAP_TYPE_d__AddDataFileResponse (65)
/* d:AddDataFileResponse */
struct d__AddDataFileResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	struct d__SignedDocInfo *SignedDocInfo;	/* optional element of type d:SignedDocInfo */
};
#endif

#ifndef SOAP_TYPE_d__AddDataFile
#define SOAP_TYPE_d__AddDataFile (68)
/* d:AddDataFile */
struct d__AddDataFile
{
	long Sesscode;	/* required element of type xsd:int */
	char *FileName;	/* optional element of type xsd:string */
	char *MimeType;	/* optional element of type xsd:string */
	char *ContentType;	/* optional element of type xsd:string */
	long Size;	/* required element of type xsd:int */
	char *DigestType;	/* optional element of type xsd:string */
	char *DigestValue;	/* optional element of type xsd:string */
	char *Content;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__RemoveDataFileResponse
#define SOAP_TYPE_d__RemoveDataFileResponse (69)
/* d:RemoveDataFileResponse */
struct d__RemoveDataFileResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	struct d__SignedDocInfo *SignedDocInfo;	/* optional element of type d:SignedDocInfo */
};
#endif

#ifndef SOAP_TYPE_d__RemoveDataFile
#define SOAP_TYPE_d__RemoveDataFile (72)
/* d:RemoveDataFile */
struct d__RemoveDataFile
{
	long Sesscode;	/* required element of type xsd:int */
	char *DataFileId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetSignedDocResponse
#define SOAP_TYPE_d__GetSignedDocResponse (73)
/* d:GetSignedDocResponse */
struct d__GetSignedDocResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *SignedDocData;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetSignedDoc
#define SOAP_TYPE_d__GetSignedDoc (76)
/* d:GetSignedDoc */
struct d__GetSignedDoc
{
	long Sesscode;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_d__GetSignedDocInfoResponse
#define SOAP_TYPE_d__GetSignedDocInfoResponse (77)
/* d:GetSignedDocInfoResponse */
struct d__GetSignedDocInfoResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	struct d__SignedDocInfo *SignedDocInfo;	/* optional element of type d:SignedDocInfo */
};
#endif

#ifndef SOAP_TYPE_d__GetSignedDocInfo
#define SOAP_TYPE_d__GetSignedDocInfo (80)
/* d:GetSignedDocInfo */
struct d__GetSignedDocInfo
{
	long Sesscode;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_d__GetDataFileResponse
#define SOAP_TYPE_d__GetDataFileResponse (81)
/* d:GetDataFileResponse */
struct d__GetDataFileResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	struct d__DataFileData *DataFileData;	/* optional element of type d:DataFileData */
};
#endif

#ifndef SOAP_TYPE_d__GetDataFile
#define SOAP_TYPE_d__GetDataFile (84)
/* d:GetDataFile */
struct d__GetDataFile
{
	long Sesscode;	/* required element of type xsd:int */
	char *DataFileId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetSignersCertificateResponse
#define SOAP_TYPE_d__GetSignersCertificateResponse (85)
/* d:GetSignersCertificateResponse */
struct d__GetSignersCertificateResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *CertificateData;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetSignersCertificate
#define SOAP_TYPE_d__GetSignersCertificate (88)
/* d:GetSignersCertificate */
struct d__GetSignersCertificate
{
	long Sesscode;	/* required element of type xsd:int */
	char *SignatureId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetNotarysCertificateResponse
#define SOAP_TYPE_d__GetNotarysCertificateResponse (89)
/* d:GetNotarysCertificateResponse */
struct d__GetNotarysCertificateResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *CertificateData;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetNotarysCertificate
#define SOAP_TYPE_d__GetNotarysCertificate (92)
/* d:GetNotarysCertificate */
struct d__GetNotarysCertificate
{
	long Sesscode;	/* required element of type xsd:int */
	char *SignatureId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetNotaryResponse
#define SOAP_TYPE_d__GetNotaryResponse (93)
/* d:GetNotaryResponse */
struct d__GetNotaryResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *OcspData;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetNotary
#define SOAP_TYPE_d__GetNotary (96)
/* d:GetNotary */
struct d__GetNotary
{
	long Sesscode;	/* required element of type xsd:int */
	char *SignatureId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetTSACertificateResponse
#define SOAP_TYPE_d__GetTSACertificateResponse (97)
/* d:GetTSACertificateResponse */
struct d__GetTSACertificateResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *CertificateData;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetTSACertificate
#define SOAP_TYPE_d__GetTSACertificate (100)
/* d:GetTSACertificate */
struct d__GetTSACertificate
{
	long Sesscode;	/* required element of type xsd:int */
	char *TimestampId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetTimestampResponse
#define SOAP_TYPE_d__GetTimestampResponse (101)
/* d:GetTimestampResponse */
struct d__GetTimestampResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *TimestampData;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetTimestamp
#define SOAP_TYPE_d__GetTimestamp (104)
/* d:GetTimestamp */
struct d__GetTimestamp
{
	long Sesscode;	/* required element of type xsd:int */
	char *TimestampId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetCRLResponse
#define SOAP_TYPE_d__GetCRLResponse (105)
/* d:GetCRLResponse */
struct d__GetCRLResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *CRLData;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetCRL
#define SOAP_TYPE_d__GetCRL (108)
/* d:GetCRL */
struct d__GetCRL
{
	long Sesscode;	/* required element of type xsd:int */
	char *SignatureId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__SignatureModule
#define SOAP_TYPE_d__SignatureModule (109)
/* d:SignatureModule */
struct d__SignatureModule
{
	char *Name;	/* optional element of type xsd:string */
	char *Type;	/* optional element of type xsd:string */
	char *Location;	/* optional element of type xsd:string */
	char *ContentType;	/* optional element of type xsd:string */
	char *Content;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__SignatureModulesArray
#define SOAP_TYPE_d__SignatureModulesArray (110)
/* d:SignatureModulesArray */
struct d__SignatureModulesArray
{
	int __sizeOfModules;	/* sequence of elements <Modules> */
	struct d__SignatureModule *__ptrModules;
};
#endif

#ifndef SOAP_TYPE_d__GetSignatureModulesResponse
#define SOAP_TYPE_d__GetSignatureModulesResponse (112)
/* d:GetSignatureModulesResponse */
struct d__GetSignatureModulesResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	struct d__SignatureModulesArray *Modules;	/* optional element of type d:SignatureModulesArray */
};
#endif

#ifndef SOAP_TYPE_d__GetSignatureModules
#define SOAP_TYPE_d__GetSignatureModules (116)
/* d:GetSignatureModules */
struct d__GetSignatureModules
{
	long Sesscode;	/* required element of type xsd:int */
	char *Platform;	/* optional element of type xsd:string */
	char *Phase;	/* optional element of type xsd:string */
	char *Type;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__PrepareSignatureResponse
#define SOAP_TYPE_d__PrepareSignatureResponse (117)
/* d:PrepareSignatureResponse */
struct d__PrepareSignatureResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *SignatureId;	/* optional element of type xsd:string */
	char *SignedInfoDigest;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__PrepareSignature
#define SOAP_TYPE_d__PrepareSignature (120)
/* d:PrepareSignature */
struct d__PrepareSignature
{
	long Sesscode;	/* required element of type xsd:int */
	char *SignersCertificate;	/* optional element of type xsd:string */
	char *SignersTokenId;	/* optional element of type xsd:string */
	char *Role;	/* optional element of type xsd:string */
	char *City;	/* optional element of type xsd:string */
	char *State;	/* optional element of type xsd:string */
	char *PostalCode;	/* optional element of type xsd:string */
	char *Country;	/* optional element of type xsd:string */
	char *SigningProfile;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__FinalizeSignatureResponse
#define SOAP_TYPE_d__FinalizeSignatureResponse (121)
/* d:FinalizeSignatureResponse */
struct d__FinalizeSignatureResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	struct d__SignedDocInfo *SignedDocInfo;	/* optional element of type d:SignedDocInfo */
};
#endif

#ifndef SOAP_TYPE_d__FinalizeSignature
#define SOAP_TYPE_d__FinalizeSignature (124)
/* d:FinalizeSignature */
struct d__FinalizeSignature
{
	long Sesscode;	/* required element of type xsd:int */
	char *SignatureId;	/* optional element of type xsd:string */
	char *SignatureValue;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__RemoveSignatureResponse
#define SOAP_TYPE_d__RemoveSignatureResponse (125)
/* d:RemoveSignatureResponse */
struct d__RemoveSignatureResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	struct d__SignedDocInfo *SignedDocInfo;	/* optional element of type d:SignedDocInfo */
};
#endif

#ifndef SOAP_TYPE_d__RemoveSignature
#define SOAP_TYPE_d__RemoveSignature (128)
/* d:RemoveSignature */
struct d__RemoveSignature
{
	long Sesscode;	/* required element of type xsd:int */
	char *SignatureId;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetVersionResponse
#define SOAP_TYPE_d__GetVersionResponse (129)
/* d:GetVersionResponse */
struct d__GetVersionResponse
{
	char *Name;	/* RPC return element */	/* optional element of type xsd:string */
	char *Version;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetVersion
#define SOAP_TYPE_d__GetVersion (132)
/* d:GetVersion */
struct d__GetVersion
{
	void* __dummy;
};
#endif

#ifndef SOAP_TYPE_d__MobileSignResponse
#define SOAP_TYPE_d__MobileSignResponse (133)
/* d:MobileSignResponse */
struct d__MobileSignResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *StatusCode;	/* optional element of type xsd:string */
	char *ChallengeID;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__MobileSign
#define SOAP_TYPE_d__MobileSign (136)
/* d:MobileSign */
struct d__MobileSign
{
	long Sesscode;	/* required element of type xsd:int */
	char *SignerIDCode;	/* optional element of type xsd:string */
	char *SignersCountry;	/* optional element of type xsd:string */
	char *SignerPhoneNo;	/* optional element of type xsd:string */
	char *ServiceName;	/* optional element of type xsd:string */
	char *AdditionalDataToBeDisplayed;	/* optional element of type xsd:string */
	char *Language;	/* optional element of type xsd:string */
	char *Role;	/* optional element of type xsd:string */
	char *City;	/* optional element of type xsd:string */
	char *StateOrProvince;	/* optional element of type xsd:string */
	char *PostalCode;	/* optional element of type xsd:string */
	char *CountryName;	/* optional element of type xsd:string */
	char *SigningProfile;	/* optional element of type xsd:string */
	char *MessagingMode;	/* optional element of type xsd:string */
	long AsyncConfiguration;	/* required element of type xsd:int */
	bool ReturnDocInfo;	/* required element of type xsd:boolean */
	bool ReturnDocData;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_d__GetStatusInfoResponse
#define SOAP_TYPE_d__GetStatusInfoResponse (137)
/* d:GetStatusInfoResponse */
struct d__GetStatusInfoResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *StatusCode;	/* optional element of type xsd:string */
	struct d__SignedDocInfo *SignedDocInfo;	/* optional element of type d:SignedDocInfo */
};
#endif

#ifndef SOAP_TYPE_d__GetStatusInfo
#define SOAP_TYPE_d__GetStatusInfo (140)
/* d:GetStatusInfo */
struct d__GetStatusInfo
{
	long Sesscode;	/* required element of type xsd:int */
	bool ReturnDocInfo;	/* required element of type xsd:boolean */
	bool WaitSignature;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_d__MobileAuthenticateResponse
#define SOAP_TYPE_d__MobileAuthenticateResponse (141)
/* d:MobileAuthenticateResponse */
struct d__MobileAuthenticateResponse
{
	long Sesscode;	/* RPC return element */	/* required element of type xsd:int */
	char *Status;	/* optional element of type xsd:string */
	char *UserIDCode;	/* optional element of type xsd:string */
	char *UserGivenname;	/* optional element of type xsd:string */
	char *UserSurname;	/* optional element of type xsd:string */
	char *UserCountry;	/* optional element of type xsd:string */
	char *UserCN;	/* optional element of type xsd:string */
	char *CertificateData;	/* optional element of type xsd:string */
	char *ChallengeID;	/* optional element of type xsd:string */
	char *Challenge;	/* optional element of type xsd:string */
	char *RevocationData;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__MobileAuthenticate
#define SOAP_TYPE_d__MobileAuthenticate (144)
/* d:MobileAuthenticate */
struct d__MobileAuthenticate
{
	char *IDCode;	/* optional element of type xsd:string */
	char *CountryCode;	/* optional element of type xsd:string */
	char *PhoneNo;	/* optional element of type xsd:string */
	char *Language;	/* optional element of type xsd:string */
	char *ServiceName;	/* optional element of type xsd:string */
	char *MessageToDisplay;	/* optional element of type xsd:string */
	char *SPChallenge;	/* optional element of type xsd:string */
	char *MessagingMode;	/* optional element of type xsd:string */
	long AsyncConfiguration;	/* required element of type xsd:int */
	bool ReturnCertData;	/* required element of type xsd:boolean */
	bool ReturnRevocationData;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_d__GetMobileAuthenticateStatusResponse
#define SOAP_TYPE_d__GetMobileAuthenticateStatusResponse (145)
/* d:GetMobileAuthenticateStatusResponse */
struct d__GetMobileAuthenticateStatusResponse
{
	char *Status;	/* RPC return element */	/* optional element of type xsd:string */
	char *Signature;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetMobileAuthenticateStatus
#define SOAP_TYPE_d__GetMobileAuthenticateStatus (148)
/* d:GetMobileAuthenticateStatus */
struct d__GetMobileAuthenticateStatus
{
	long Sesscode;	/* required element of type xsd:int */
	bool WaitSignature;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_d__DataFileDigest
#define SOAP_TYPE_d__DataFileDigest (149)
/* d:DataFileDigest */
struct d__DataFileDigest
{
	char *Id;	/* optional element of type xsd:string */
	char *DigestType;	/* optional element of type xsd:string */
	char *DigestValue;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__DataFileDigestList
#define SOAP_TYPE_d__DataFileDigestList (150)
/* d:DataFileDigestList */
struct d__DataFileDigestList
{
	int __sizeOfDataFileDigests;	/* sequence of elements <DataFileDigest> */
	struct d__DataFileDigest *__ptrDataFileDigest;
};
#endif

#ifndef SOAP_TYPE_d__MobileCreateSignatureResponse
#define SOAP_TYPE_d__MobileCreateSignatureResponse (152)
/* d:MobileCreateSignatureResponse */
struct d__MobileCreateSignatureResponse
{
	long Sesscode;	/* RPC return element */	/* required element of type xsd:int */
	char *ChallengeID;	/* optional element of type xsd:string */
	char *Status;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__MobileCreateSignature
#define SOAP_TYPE_d__MobileCreateSignature (156)
/* d:MobileCreateSignature */
struct d__MobileCreateSignature
{
	char *IDCode;	/* optional element of type xsd:string */
	char *SignersCountry;	/* optional element of type xsd:string */
	char *PhoneNo;	/* optional element of type xsd:string */
	char *Language;	/* optional element of type xsd:string */
	char *ServiceName;	/* optional element of type xsd:string */
	char *MessageToDisplay;	/* optional element of type xsd:string */
	char *Role;	/* optional element of type xsd:string */
	char *City;	/* optional element of type xsd:string */
	char *StateOrProvince;	/* optional element of type xsd:string */
	char *PostalCode;	/* optional element of type xsd:string */
	char *CountryName;	/* optional element of type xsd:string */
	char *SigningProfile;	/* optional element of type xsd:string */
	struct d__DataFileDigestList *DataFiles;	/* optional element of type d:DataFileDigestList */
	char *Format;	/* optional element of type xsd:string */
	char *Version;	/* optional element of type xsd:string */
	char *SignatureID;	/* optional element of type xsd:string */
	char *MessagingMode;	/* optional element of type xsd:string */
	long AsyncConfiguration;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_d__GetMobileCreateSignatureStatusResponse
#define SOAP_TYPE_d__GetMobileCreateSignatureStatusResponse (157)
/* d:GetMobileCreateSignatureStatusResponse */
struct d__GetMobileCreateSignatureStatusResponse
{
	long Sesscode;	/* RPC return element */	/* required element of type xsd:int */
	char *Status;	/* optional element of type xsd:string */
	char *Signature;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_d__GetMobileCreateSignatureStatus
#define SOAP_TYPE_d__GetMobileCreateSignatureStatus (160)
/* d:GetMobileCreateSignatureStatus */
struct d__GetMobileCreateSignatureStatus
{
	long Sesscode;	/* required element of type xsd:int */
	bool WaitSignature;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_mss_DummyResp
#define SOAP_TYPE_mss_DummyResp (161)
/* mss-DummyResp */
struct mss_DummyResp
{
	char *str;	/* RPC return element */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_mss__MSS_USCORESignatureDummy
#define SOAP_TYPE_mss__MSS_USCORESignatureDummy (164)
/* mss:MSS_SignatureDummy */
struct mss__MSS_USCORESignatureDummy
{
	void* _dummy;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (167)
/* SOAP Header: */
struct SOAP_ENV__Header
{
	void *dummy;	/* transient */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (168)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (170)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (171)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (172)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (6)
typedef char *xsd__string;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (7)
typedef char *xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (9)
typedef float xsd__float;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (11)
typedef long xsd__int;
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (13)
typedef bool xsd__boolean;
#endif

#ifndef SOAP_TYPE_xsd__positiveInteger
#define SOAP_TYPE_xsd__positiveInteger (17)
typedef ULONG64 xsd__positiveInteger;
#endif

#ifndef SOAP_TYPE_XML
#define SOAP_TYPE_XML (18)
typedef char *XML;
#endif

#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (19)
typedef char *xsd__dateTime;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__StartSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *SigningProfile, char *SigDocXML, bool bHoldSession, struct d__DataFileData *datafile, struct d__StartSessionResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__CloseSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, struct d__CloseSessionResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__CreateSignedDoc(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *Format, char *Version, struct d__CreateSignedDocResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__AddDataFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *FileName, char *MimeType, char *ContentType, long Size, char *DigestType, char *DigestValue, char *Content, struct d__AddDataFileResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__RemoveDataFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *DataFileId, struct d__RemoveDataFileResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetSignedDoc(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, struct d__GetSignedDocResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetSignedDocInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, struct d__GetSignedDocInfoResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetDataFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *DataFileId, struct d__GetDataFileResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetSignersCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *SignatureId, struct d__GetSignersCertificateResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetNotarysCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *SignatureId, struct d__GetNotarysCertificateResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetNotary(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *SignatureId, struct d__GetNotaryResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetTSACertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *TimestampId, struct d__GetTSACertificateResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetTimestamp(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *TimestampId, struct d__GetTimestampResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetCRL(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *SignatureId, struct d__GetCRLResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetSignatureModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *Platform, char *Phase, char *Type, struct d__GetSignatureModulesResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__PrepareSignature(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *SignersCertificate, char *SignersTokenId, char *Role, char *City, char *State, char *PostalCode, char *Country, char *SigningProfile, struct d__PrepareSignatureResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__FinalizeSignature(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *SignatureId, char *SignatureValue, struct d__FinalizeSignatureResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__RemoveSignature(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *SignatureId, struct d__RemoveSignatureResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetVersion(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct d__GetVersionResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__MobileSign(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, char *SignerIDCode, char *SignersCountry, char *SignerPhoneNo, char *ServiceName, char *AdditionalDataToBeDisplayed, char *Language, char *Role, char *City, char *StateOrProvince, char *PostalCode, char *CountryName, char *SigningProfile, char *MessagingMode, long AsyncConfiguration, bool ReturnDocInfo, bool ReturnDocData, struct d__MobileSignResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetStatusInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, bool ReturnDocInfo, bool WaitSignature, struct d__GetStatusInfoResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__MobileAuthenticate(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *IDCode, char *CountryCode, char *PhoneNo, char *Language, char *ServiceName, char *MessageToDisplay, char *SPChallenge, char *MessagingMode, long AsyncConfiguration, bool ReturnCertData, bool ReturnRevocationData, struct d__MobileAuthenticateResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetMobileAuthenticateStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, bool WaitSignature, struct d__GetMobileAuthenticateStatusResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__MobileCreateSignature(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *IDCode, char *SignersCountry, char *PhoneNo, char *Language, char *ServiceName, char *MessageToDisplay, char *Role, char *City, char *StateOrProvince, char *PostalCode, char *CountryName, char *SigningProfile, struct d__DataFileDigestList *DataFiles, char *Format, char *Version, char *SignatureID, char *MessagingMode, long AsyncConfiguration, struct d__MobileCreateSignatureResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_d__GetMobileCreateSignatureStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, long Sesscode, bool WaitSignature, struct d__GetMobileCreateSignatureStatusResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_mss__MSS_USCORESignatureDummy(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct mss_DummyResp *resp);

#ifdef __cplusplus
}
#endif

#endif

/* End of ddsStub.h */
