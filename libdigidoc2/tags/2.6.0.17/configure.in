# Autoconf for DigiDoc

AC_INIT(DigiDoc Library, 2.6.0)

# our versions
DIGIDOC_RELEASE=2
DIGIDOC_BUILD=6
DIGIDOC_PATCH=0
DIGIDOC_VERSION=$DIGIDOC_RELEASE.$DIGIDOC_BUILD.$DIGIDOC_PATCH
VERSION=${DIGIDOC_VERSION}

AC_SUBST(VERSION)

AC_CANONICAL_HOST	

# libtool versions
DIGIDOC_LT_CURRENT=$DIGIDOC_RELEASE
DIGIDOC_LT_REVISION=$DIGIDOC_BUILD
DIGIDOC_LT_AGE=$DIGIDOC_PATCH

AC_SUBST(DIGIDOC_LT_CURRENT)
AC_SUBST(DIGIDOC_LT_REVISION)
AC_SUBST(DIGIDOC_LT_AGE)
AC_SUBST(DIGIDOC_VERSION)

# we use automake - version syncing still not yet done....
AM_INIT_AUTOMAKE(libdigidoc, 2.6.0)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_C_CONST
AC_PROG_INSTALL
AC_HEADER_STDC

# we use libtool to build the library
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL
AM_PROG_CC_C_O

# digidoc depends on openssl and libxml2
PKG_CHECK_MODULES(DIGIDOC, openssl libxml-2.0)
AC_SUBST(DIGIDOC_CFLAGS)
AC_SUBST(DIGIDOC_LIBS)

# dlopen for pkc11 module loading
AC_SUBST(LIBDL)
AC_CHECK_LIB(dl, dlopen, [LIBDL="$LIBDL -ldl" ac_cv_func_dlopen_ldl=yes], ac_cv_func_dlopen_ldl=no)

# we don't want hardcoded values anywhere in the code
digidoc_conf_file=`eval echo ${sysconfdir}/digidoc.conf`
AC_DEFINE_UNQUOTED(DIGIDOC_CONF_FILE, "$digidoc_conf_file", [default config file for libdigidoc])

# should investigate the topic a bit more...
if test "x$prefix" != xNONE; then
  digidoc_certs_path="$prefix/share/libdigidoc/certs"
else
  digidoc_certs_path="$ac_default_prefix/share/libdigidoc/certs"
fi
AC_SUBST(digidoc_certs_path)

# and we use wget to get the certs off the web (until they will be separately packaged in different package)
AC_PATH_PROGS(WGET, wget)

# write the configuration to those files
AC_OUTPUT([
Makefile
libdigidoc.pc
libdigidoc/Makefile
libdigidoc/pkcs11/Makefile
etc/Makefile
etc/digidoc.conf
doc/Makefile
win32/Makefile
])
 	                
